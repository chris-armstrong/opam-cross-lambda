name: Builds, tests & co

on:
  pull_request:
    branches: [main]
  push: 
    branches: [main]

permissions: read-all

jobs:
  aarch64-al2023_5_3:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
  
    runs-on: ${{ matrix.os }}
  
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4
      - name: install zig
        uses: mlugg/setup-zig@v1
        with:
          version: master
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3.0
      - name: add repository
        run: opam repo add cross .
      - name: configure and install zig wrapper
        run: opam install conf-zig-wrapper-cross-aarch64-al2023
        env:
          ZIG_PATH: zig
      - name: validate zig works
        if: ${{ runner.os != 'windows' }}
        shell: bash
        run: |
          eval $(opam env)
          { echo "#include <stdio.h>"; echo "int main() { return 0; }"; } > test.c
          export PATH=$PATH:$OPAM_SWITCH_PREFIX/bin
          aarch64-al2023-target-cc -o test test.c
      - name: install aarch64 compiler
        run: opam install ocaml-cross-aarch64-al2023 --verbose 
          
  # Mac requires disabling sandboxing (zig seems to fail at the configure stage with AccessDenied building conftest.c)
  aarch64-al2023_5_3-mactarget:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
        
    runs-on: ${{ matrix.os }}
  
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4
      - name: install zig
        uses: mlugg/setup-zig@v1
        with:
          version: master
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3.0
          opam-disable-sandboxing: true
      - name: add repository
        run: opam repo add cross .
      - name: configure and install zig wrapper
        run: opam install conf-zig-wrapper-cross-aarch64-al2023
        env:
          ZIG_PATH: zig
      - name: validate zig works
        if: ${{ runner.os != 'windows' }}
        shell: bash
        run: |
          eval $(opam env)
          { echo "#include <stdio.h>"; echo "int main() { return 0; }"; } > test.c
          export PATH=$PATH:$OPAM_SWITCH_PREFIX/bin
          aarch64-al2023-target-cc -o test test.c
      - name: install aarch64 compiler
        run: opam install ocaml-cross-aarch64-al2023 --verbose 

  x86_64-al2023_5_3:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
  
    runs-on: ${{ matrix.os }}
  
    steps:
      - name: Checkout tree
        uses: actions/checkout@v4
      - name: install zig
        uses: mlugg/setup-zig@v1
        with:
          version: master
      - name: Set-up OCaml
        uses: ocaml/setup-ocaml@v3
        with:
          ocaml-compiler: 5.3.0
      - name: add repository
        run: opam repo add cross .
      - name: configure and install zig wrapper
        run: opam install conf-zig-wrapper-cross-x86_64-al2023
        env:
          ZIG_PATH: zig
      - name: validate zig works
        if: ${{ runner.os != 'windows' }}
        shell: bash
        run: |
          eval $(opam env)
          { echo "#include <stdio.h>"; echo "int main() { return 0; }"; } > test.c
          export PATH=$PATH:$OPAM_SWITCH_PREFIX/bin
          x86_64-al2023-target-cc -o test test.c
      - name: install x86_64 compiler
        run: opam install ocaml-cross-x86_64-al2023 --verbose 
